from sqlalchemy import Column, Integer, String, ForeignKey
from sqlalchemy.orm import relationship

from src.config.database import Base


class HouseholdIdentification(Base):
    __tablename__ = "idenf"

    identification_id = Column("ID_DENF", Integer, primary_key=True, index=True)
    structure = Column("STRUCT", Integer, index=True)
    platform = Column("PLATFORM", Integer, index=True)
    social_center_code = Column("CS_CODE", String, index=True)
    agent = Column("AGENT", Integer, index=True)
    identification_date_day = Column("DENREGJ", Integer, index=True)
    identification_date_month = Column("DENREGM", Integer)
    identification_date_year = Column("DENREGA", Integer)
    region = Column("IDREG", Integer, index=True)
    department = Column("IDDEPART", Integer)
    sub_prefecture = Column("IDSP", Integer, index=True)
    village = Column("IDCOM", Integer, index=True)
    neighborhood = Column("IDQUAR", Integer)
    household_id = Column("IDNUM", Integer)
    household_code = Column("CODEMEN", String, index=True)
    household_old_code = Column("CODEMEN_OLD", String)
    block = Column("ILOT", String)
    batch = Column("LOT", String)
    reference = Column("REPERE", String)
    marital_status = Column("SITMATR", String)
    wife_number = Column("NBREPSES", String)
    household_chief_handicap = Column("HNDCM", String)
    member_number = Column("MENLEN", String)
    entry_point = Column("PETR", String)
    other_entry_point = Column("PETRAUTR", String)
    active_persons_number = Column("MENACTIV", String)
    ovc_number = Column("NBROEV", String)
    meal_number = Column("NBRREPAS", String)
    housing_type = Column("TYPLOG", String)
    other_housing_type = Column("LOGAUTR", String)
    room_number = Column("NBRP", String)
    house_situation = Column("SITLOG", String)
    commodity = Column("CMDITE", String)
    main_water_source = Column("SRCEAU", String)
    other_main_water_source = Column("SRCEAUTR", String)
    main_electricity_source = Column("SRCELEC", String)
    other_main_electricity_source = Column("AUTRSRCELEC", String)
    main_combustible = Column("PLCOMB", String)
    other_main_combustible = Column("COMBAUTR", String)
    religion = Column("RELG", String)
    other_religion = Column("RELGAUTR", String)
    ethnicity = Column("ETH", String)
    other_household_resource = Column("RESSAUTR", String)
    social_capital = Column("CAPTL", String)
    other_social_capital = Column("CAPTLAUTR", String)
    main_incoming_source = Column("PLESRCREV", String)
    other_incoming_source = Column("SRCREVAUTR", String)
    estimated_monthly_expense = Column("ESTIMDEP", String)
    estimated_monthly_income = Column("ESTIMREV", String)
    classification = Column("CLS", String)
    registration_status = Column("Etat", Integer)
    registration_status_change = Column("Etat_modif", Integer)
    registration_status_report = Column("Etat_stat", Integer)
    registration_status_remove = Column("Etat_del", Integer)
    graduation_status = Column("Etat_grad", Integer)
    created_by = Column("idadd", String)
    created_at = Column("dateheure", String)
    changed_by = Column("idmodif", String)
    changed_at = Column("dateheure_modif", String)

    # members = relationship("MemberIdentification", back_populates="household")


class MemberIdentification(Base):
    __tablename__ = "idenfchd"

    member_id = Column("ID_DENFD", Integer, primary_key=True, index=True)
    household_id = Column("ID_DENF", Integer, ForeignKey("idenf.ID_DENF"), index=True)
    identification_date = Column("DATENREG", String, index=True)
    order_number = Column("ORD", Integer, index=True)
    structure = Column("STRUCT", Integer, index=True)
    platform = Column("PLATFORM", Integer, index=True)
    social_center_code = Column("CS_CODE", String, index=True)
    household_old_code = Column("CODEMEN_OLD", String)
    household_code = Column("CODEMEN", String, index=True)
    member_code = Column("CODEBEN", String, index=True)
    dreams_code = Column("CODEDREAMS", String)
    dreams_date = Column("DATEDREAMS", String)
    region = Column("IDREG", Integer, index=True)
    department = Column("IDDEPART", Integer, index=True)
    sub_prefecture = Column("IDSP", Integer, index=True)
    village = Column("IDCOM", Integer, index=True)
    neighborhood = Column("IDQUAR", Integer, index=True)
    household_identification_id = Column("IDNUM", Integer, index=True)
    last_name = Column("NOM", String)
    first_name = Column("PRENOMS", String)
    gender = Column("SEXE", Integer, index=True)
    birthdate_month = Column("DNAISM", Integer, index=True)
    birthdate_year = Column("DNAISA", Integer, index=True)
    handicap = Column("HDC", String)
    relation_with_chief = Column("PARLIEN", String)
    birthdate_certificate = Column("ETATCIV", String)
    birthdate_certificate_number = Column("NUMETATCIV", String)
    school_level = Column("NIVETUD", String)
    vulnerability = Column("VULNERA", String)
    vulnerability_type = Column("TYPVULNE", String)
    other_vulnerability_type = Column("AUTRTYPVUL", String)
    hiv_status = Column("VIH", String)
    person_informed = Column("PERS", String)
    other_person = Column("AUTRPERS", String)
    arv_treatment_followup = Column("SUIVARV", String)
    care_giver_code = Column("NUMBS", Integer)
    profession = Column("PROFES", String)
    needs = Column("BESOINS", String)
    relation_with_adults = Column("RELPAR", String)
    relation_with_children = Column("RELENFS", String)
    relation_with_care_giver = Column("RELSOINS", String)
    becoming = Column("DEVEN", String, index=True)
    other_becoming = Column("AUTRDEVEN", String)
    registration_status = Column("Etat", Integer)
    registration_status_changed = Column("Etat_modif", Integer)
    registration_status_report = Column("Etat_stat", Integer)
    registration_status_remove = Column("Etat_del", Integer)
    # household = relationship("HouseholdIdentification", back_populates="members")

